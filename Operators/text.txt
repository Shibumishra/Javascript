==	equal to
===	equal value and equal type
!=	not equal
!==	not equal value or not equal type
>	greater than
<	less than
>=	greater than or equal to
<=	less than or equal to
?	ternary operator



=  assignment operator 
var x = 2


+  addition operator
2 + 3 = 5


-  subtraction operator
2 - 3 = -1


*  multiplicative operator
2 * 3 = 6


/  division operator
3 / 2 = 1.5


%  modulus operator
3 % 2 = 1


++  increment operator
var x = 2
x++
// x now equals 3 (x = x + 1 in literal notation)


--  decrement operator
var x = 3
x--
// x now equals 2 (x = x - 1 in literal notation)


+=  additive reassignment operator
var x = 2
x += 3
// x now equals 5 (x = x + 3 in literal notation)


-=  subtractive reassignment operator
var x = 3
x -= 2
// x now equals 1 (x = x - 2 in literal notation)


*=  multiplicative reassignment operator
var x = 3
x *= 2
// x now equals 6 (x = x * 2 in literal notation)


/=  division reassignment operator
x = 3
x /= 2
// x now equals 1.5 (x = x / 2 in literal notation)


%=  modulus reassignment operator
x = 3
x %= 2
// x now equals 1 (x = x % 2 in literal notation)


==  logical comparison operator
2 == 2 // Returns true
2 == "2" // Returns true
2 == 3 // Returns false


===  logical strict comparison operator
2 === 2 // Returns true
2 === "2" // Returns false
2 === 3 // Returns false


!=  logical not equal comparison operator
2 != 3 // Returns true
2 != 2 // Returns false
2 != "2" // Returns false


!==  logical not equal strict comparison operator
2 !== 3 // Returns true
2 !== 2 // Returns false
2 !== "2" // Returns true


<  logical less than comparison operator
2 < 3 // Returns true
3 < 2 // Returns false


>  logical greater than comparison operator
3 > 2 // Returns true
2 > 3 // Returns false
3 > 3 // Returns false


<=  logical less than or equal to comparison operator
2 <= 3 // Returns true
3 <= 3 // Returns true
3 <= 2 // Returns false